<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<!--<bean id="controllerLogAspect" class="com.hanshow.wise.common.aspect.ControllerLogAspect" />-->

	<!--<aop:config>-->
	<!--<aop:aspect id="controllerLog" ref="controllerLogAspect"-->
	<!--order="2">-->
	<!--<aop:pointcut id="requestLog"-->
	<!--expression="execution(* com.hanshow.wise.portal.eshop.controller.*.*(..)) and  args(request, jsonObject)" />-->
	<!--&lt;!&ndash; <aop:before method="beforeRequest" pointcut-ref="requestLog" arg-names="request,-->
	<!--jsonObject" /> &ndash;&gt;-->
	<!--<aop:after-returning returning="response"-->
	<!--method="afterReturningRequest" pointcut-ref="requestLog"-->
	<!--arg-names="request, jsonObject, response" />-->
	<!--<aop:after-throwing throwing="exception"-->
	<!--method="afterThrowingRequest" pointcut-ref="requestLog"-->
	<!--arg-names="request, jsonObject, exception" />-->
	<!--</aop:aspect>-->
	<!--</aop:config>-->
<!--
	<bean id="controllerLogAspect" class="com.hanshow.wise.common.aspect.ControllerLogAspect" />
-->

    <bean id="loginValidateAspect" class="com.wxj.aspect.LoginValidateAspect" />
	<!--统一验证小程序调用接口时是否带有合法的securityKey,合法则继续走,不合法则直接拦截-->
    <aop:config>
        <aop:aspect id="loginValidate" ref="loginValidateAspect">
            <!-- 配置一个切点 -->
            <aop:pointcut id="loginValidatePoint" expression="execution(* com.wxj.controller.*.*(..)) and args(request,requestBean)"  />
            <!-- 配置前置通知 -->
            <aop:before pointcut-ref="loginValidatePoint" method="before" arg-names="request, requestBean"/>
            <!-- 配置后置通知 -->
            <aop:after pointcut-ref="loginValidatePoint" method="after" arg-names="request, requestBean"/>
            <!-- 配置后置返回通知 -->
<!--            <aop:after-returning pointcut-ref="loginValidatePoint" method="afterReturning" arg-names="request,response,jsonObject" returning="response" />-->
            <!-- 配置异常捕捉 -->
<!--
            <aop:after-throwing throwing="exception" method="afterThrowingRequest" pointcut-ref="loginValidatePoint" arg-names="request,jsonObject, exception" />
-->
        </aop:aspect>
    </aop:config>
	<bean id="exceptionResolver" class="com.wxj.resolver.CustomExceptionResolver"></bean>
</beans>