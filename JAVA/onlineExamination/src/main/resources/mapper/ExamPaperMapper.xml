<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxj.mapper.ExamPaperMapper">
  <resultMap id="BaseResultMap" type="com.wxj.model.PO.ExamPaper">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="questions_amount" jdbcType="TINYINT" property="questionsAmount" />
    <result column="course_code" jdbcType="CHAR" property="courseCode" />
    <result column="opeator" jdbcType="INTEGER" property="opeator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, questions_amount, course_code, opeator, create_time, modify_time,
    del_flag
  </sql>
  <select id="selectByExample" parameterType="com.wxj.model.PO.ExamPaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam_paper
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wxj.model.PO.ExamPaperExample">
    delete from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wxj.model.PO.ExamPaper">
    insert into exam_paper (id, code, name, questions_amount,
      course_code, opeator, create_time,
      modify_time, del_flag)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{questionsAmount,jdbcType=TINYINT},
      #{courseCode,jdbcType=CHAR}, #{opeator,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wxj.model.PO.ExamPaper">
    insert into exam_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="questionsAmount != null">
        questions_amount,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="opeator != null">
        opeator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="questionsAmount != null">
        #{questionsAmount,jdbcType=TINYINT},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=CHAR},
      </if>
      <if test="opeator != null">
        #{opeator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxj.model.PO.ExamPaperExample" resultType="java.lang.Long">
    select count(*) from exam_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_paper
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.questionsAmount != null">
        questions_amount = #{record.questionsAmount,jdbcType=TINYINT},
      </if>
      <if test="record.courseCode != null">
        course_code = #{record.courseCode,jdbcType=CHAR},
      </if>
      <if test="record.opeator != null">
        opeator = #{record.opeator,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_paper
    set id = #{record.id,jdbcType=INTEGER},
    code = #{record.code,jdbcType=CHAR},
    name = #{record.name,jdbcType=CHAR},
    questions_amount = #{record.questionsAmount,jdbcType=TINYINT},
    course_code = #{record.courseCode,jdbcType=CHAR},
    opeator = #{record.opeator,jdbcType=INTEGER},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
    del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxj.model.PO.ExamPaper">
    update exam_paper
    <set>
      <if test="code != null">
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="questionsAmount != null">
        questions_amount = #{questionsAmount,jdbcType=TINYINT},
      </if>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=CHAR},
      </if>
      <if test="opeator != null">
        opeator = #{opeator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxj.model.PO.ExamPaper">
    update exam_paper
    set code = #{code,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      questions_amount = #{questionsAmount,jdbcType=TINYINT},
      course_code = #{courseCode,jdbcType=CHAR},
      opeator = #{opeator,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectExamPaperByParams" parameterType="com.wxj.model.DTO.ExamPaperParamsDTO" resultType="com.wxj.model.VO.ExamPaperVO">
    select ep.id id, ep.code code, ep.name name, ep.questions_amount number,c.name courseName, t.name teacherName
    from exam_paper ep
    LEFT JOIN course c on ep.course_code = c.code
    LEFT JOIN teacher t on ep.opeator = t.id
    where 1=1
    <if test='record.code != null and record.code != ""'>
      and ep.code = #{record.code,jdbcType=CHAR}
    </if>
    <if test='record.name != null and record.name != ""'>
      and ep.name like concat('%', #{record.name,jdbcType=CHAR})
    </if>
    <if test='record.courseCode != null and record.courseCode != ""'>
      and ep.course_code = #{record.courseCode,jdbcType=CHAR}
    </if>
    <if test='record.teacherName != null and record.teacherName !=""'>
      and t.name = #{record.teacherName,jdbcType=CHAR}
    </if>
  </select>

  <select id="countExamPaperByParams" parameterType="com.wxj.model.DTO.ExamPaperParamsDTO" resultType="java.lang.Integer">
    select count(1)
    from exam_paper ep
    LEFT JOIN course c on ep.course_code = c.code
    LEFT JOIN teacher t on ep.opeator = t.id
    where 1=1
    <if test='record.code != null and record.code != ""'>
      and ep.code = #{record.code,jdbcType=CHAR}
    </if>
    <if test='record.name != null and record.name != ""'>
      and ep.name like concat('%', #{record.name,jdbcType=CHAR})
    </if>
    <if test='record.courseCode != null and record.courseCode != ""'>
      and ep.course_code = #{record.courseCode,jdbcType=CHAR}
    </if>
    <if test='record.teacherName != null and record.teacherName !=""'>
      and t.name = #{record.teacherName,jdbcType=CHAR}
    </if>
  </select>

  <resultMap id="ExamPaperDetailsMap" type="com.wxj.model.VO.ExamPaperDetailsVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="questions_amount" jdbcType="TINYINT" property="questionsAmount" />
    <result column="course_name" jdbcType="CHAR" property="courseName" />
    <result column="teacher_name" jdbcType="CHAR" property="teacherName" />

  </resultMap>

  <select id="selectExamPaperDetailsById" parameterType="java.lang.Integer" resultMap="ExamPaperDetailsMap">
    select ep.id id, ep.code, ep.name, ep.questions_amount,c.name course_name, t.name teacher_name
    from exam_paper ep
    LEFT JOIN course c on ep.course_code = c.code
    LEFT JOIN teacher t on ep.opeator = t.id
    where ep.id = #{id,jdbcType=INTEGER}
</mapper>