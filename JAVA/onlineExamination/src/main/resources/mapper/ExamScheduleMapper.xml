<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxj.mapper.ExamScheduleMapper">
  <resultMap id="BaseResultMap" type="com.wxj.model.PO.ExamSchedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="CHAR" property="title" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="duration" jdbcType="TINYINT" property="duration" />
    <result column="exam_paper_id" jdbcType="INTEGER" property="examPaperId" />
    <result column="exam_paper_code" jdbcType="CHAR" property="examPaperCode" />
    <result column="exam_paper_name" jdbcType="CHAR" property="examPaperName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, start_time, duration, exam_paper_id, exam_paper_code, exam_paper_name, 
    create_time, modify_time, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.wxj.model.PO.ExamScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wxj.model.PO.ExamScheduleExample">
    delete from exam_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wxj.model.PO.ExamSchedule">
    insert into exam_schedule (id, title, start_time, 
      duration, exam_paper_id, exam_paper_code, 
      exam_paper_name, create_time, modify_time, 
      del_flag)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{duration,jdbcType=TINYINT}, #{examPaperId,jdbcType=INTEGER}, #{examPaperCode,jdbcType=CHAR}, 
      #{examPaperName,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wxj.model.PO.ExamSchedule">
    insert into exam_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="examPaperId != null">
        exam_paper_id,
      </if>
      <if test="examPaperCode != null">
        exam_paper_code,
      </if>
      <if test="examPaperName != null">
        exam_paper_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=CHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=TINYINT},
      </if>
      <if test="examPaperId != null">
        #{examPaperId,jdbcType=INTEGER},
      </if>
      <if test="examPaperCode != null">
        #{examPaperCode,jdbcType=CHAR},
      </if>
      <if test="examPaperName != null">
        #{examPaperName,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxj.model.PO.ExamScheduleExample" resultType="java.lang.Long">
    select count(*) from exam_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=CHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=TINYINT},
      </if>
      <if test="record.examPaperId != null">
        exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
      </if>
      <if test="record.examPaperCode != null">
        exam_paper_code = #{record.examPaperCode,jdbcType=CHAR},
      </if>
      <if test="record.examPaperName != null">
        exam_paper_name = #{record.examPaperName,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam_schedule
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=CHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      duration = #{record.duration,jdbcType=TINYINT},
      exam_paper_id = #{record.examPaperId,jdbcType=INTEGER},
      exam_paper_code = #{record.examPaperCode,jdbcType=CHAR},
      exam_paper_name = #{record.examPaperName,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxj.model.PO.ExamSchedule">
    update exam_schedule
    <set>
      <if test="title != null">
        title = #{title,jdbcType=CHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=TINYINT},
      </if>
      <if test="examPaperId != null">
        exam_paper_id = #{examPaperId,jdbcType=INTEGER},
      </if>
      <if test="examPaperCode != null">
        exam_paper_code = #{examPaperCode,jdbcType=CHAR},
      </if>
      <if test="examPaperName != null">
        exam_paper_name = #{examPaperName,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxj.model.PO.ExamSchedule">
    update exam_schedule
    set title = #{title,jdbcType=CHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      duration = #{duration,jdbcType=TINYINT},
      exam_paper_id = #{examPaperId,jdbcType=INTEGER},
      exam_paper_code = #{examPaperCode,jdbcType=CHAR},
      exam_paper_name = #{examPaperName,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap id="selectExamScheduleMap" type="com.wxj.model.VO.ExamScheduleVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="CHAR" property="examScheduleName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="duration" jdbcType="TINYINT" property="duration" />
    <result column="exam_paper_code" jdbcType="CHAR" property="examPaperCode" />
    <result column="exam_paper_name" jdbcType="CHAR" property="examPaperName" />
    <collection property="className" ofType="java.lang.String" javaType="java.util.List">
      <result column="className"/>
    </collection>
  </resultMap>

  <select id="listExamScheduleByParams" parameterType="com.wxj.model.DTO.ExamScheduleParamsDTO" resultType="com.wxj.model.VO.ExamScheduleVO">
    select es.id,es.title examScheduleName, es.start_time startTime, es.duration, es.exam_paper_code examPaperCode, es.exam_paper_name examPaperName, cla.`name` className
    from exam_schedule es
    LEFT JOIN exam_paper ep on es.exam_paper_id = ep.id
    LEFT JOIN course cou on ep.course_code = cou.code
    LEFT JOIN class_course cc on cou.id = cc.course_id
    LEFT JOIN class cla on cc.class_id = cla.id
    where 1=1
    <if test='record.examPaperCode != null and record.examPaperCode != ""'>
      and ep.exam_paper_code = #{record.examPaperCode,jdbcType=CHAR}
    </if>
    <if test='record.status != null'>
      <if test="record.status == 1">
        and es.start_time &gt; now()
      </if>
      <if test="record.status == 2">
        and es.start_time &lt;= now()
        and date_add(es.start_time, interval es.duration minute) &gt;= now()
      </if>
      <if test="record.status == 3">
        and date_add(es.start_time, interval es.duration minute) &lt; now()
      </if>
    </if>
  </select>

  <select id="countExamScheduleByParams" parameterType="com.wxj.model.DTO.ExamScheduleParamsDTO" resultType="java.lang.Long">
    select count(1)
    from exam_schedule es
    LEFT JOIN exam_paper ep on es.exam_paper_id = ep.id
    LEFT JOIN course cou on ep.course_code = cou.code
    LEFT JOIN class_course cc on cou.id = cc.course_id
    LEFT JOIN class cla on cc.class_id = cla.id
    where 1=1
    <if test='record.examPaperCode != null and record.examPaperCode != ""'>
      and ep.exam_paper_code = #{record.examPaperCode,jdbcType=CHAR}
    </if>
    <if test='record.status != null'>
      <if test="record.status == 1">
        and es.start_time &gt; now()
      </if>
      <if test="record.status == 2">
        and es.start_time &lt;= now()
        and date_add(es.start_time, interval es.duration minute) &gt;= now()
      </if>
      <if test="record.status == 3">
        and date_add(es.start_time, interval es.duration minute) &lt; now()
      </if>
    </if>
  </select>

  <select id="selectExamScheduleDetailsById" parameterType="java.lang.Integer" resultType="com.wxj.model.VO.ExamScheduleDetailsVO">
    select exam_paper_code examPaperCode, start_time startTime, duration, title
    from exam_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectStudentExamScheduleBySno" parameterType="java.lang.String" resultType="com.wxj.model.VO.StudentExamScheduleVO">
    select es.id examScheduleId, es.title examScheduleTitle, es.start_time startTime, es.duration, ep.id examPaperId, ep.name examPaperName
    from student s
    LEFT JOIN class_course cc on s.class_id = cc.class_id
    LEFT JOIN course c on cc.course_id = c.id
    LEFT JOIN exam_paper ep on c.code = ep.course_code
    LEFT JOIN exam_schedule es on ep.id = es.exam_paper_id
    where s.sno = #{sno,jdbcType=CHAR}
    and now() &lt; date_add(es.start_time, interval es.duration minute)
  </select>
</mapper>

